.navbar {
  // Set variables/desktop state
  @media (min-width: 60rem) {
    --details-list-display: none;
    --nav-button-display: none;
    --nav-position: static;
    ul {
      --nav-list-background: transparent;
      --nav-list-layout: row;
      --nav-list-position: static;
      --nav-list-padding: 0;
      --nav-list-border-block-start: none;
      --nav-list-border-block-end: none;
      --nav-list-height: auto;
      --nav-list-width: 100%;
      --nav-list-shadow: none;
      --nav-list-transform: none;
      --nav-list-visibility: visible;
    }
  }

  details {
    display: var(--details-list-display, flex);
    ul {
      // Prevent details from open in new window within mobile nav
      all: unset;
      padding-block: var(--space-3xs-2xs);
    }
  }
  ul {
    display: flex;
    gap: var(--space-xs-s);
    flex-direction: var(--nav-list-layout, column);
    padding: var(--nav-list-padding, var(--space-m));
    position: var(--nav-list-position, fixed);
    inset-block-start: var(--offset); // Logical property. Equivalent to top: 0;
    inset-inline: 0; // Logical property. Equivalent to right: 0;
    height: var(--nav-list-height, calc(100vh - var(--offset)));
    width: var(--nav-list-width);
    visibility: var(--nav-list-visibility, visible);
    overflow-y: auto;
    background-color: var(--nav-list-background, var(--color-light));
    li {
      padding-inline-start: var(--space-m);
    }
  }

  // Mobile but not expanded
  [aria-expanded="false"] + ul {
    transform: var(--nav-list-transform, translateX(100%));
    visibility: var(--nav-list-visibility, hidden);
  }
  .mobile-button {
    all: unset;
    display: var(--nav-button-display, flex);
    align-items: center;
    position: relative;
    z-index: 2;
    cursor: pointer;
    padding-right: var(--space-s-m);
  }
  span {
    padding-right: var(--space-2xs-xs);
  }
  svg {
    height: 100%;
    width: auto;
  }

  [aria-expanded="true"] svg {
    transform: var(--nav-list-rotate, rotate(45deg));
  }

  // Animates ul only when opening to avoid flash on page load, svg always
  @media (prefers-reduced-motion: no-preference) {
    [aria-expanded="true"] + ul,
    svg {
      transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55), visibility 0.05s linear;
    }
  }

  @media (min-width: 60rem) {
    a:is(:hover, :focus) {
      text-underline-offset: 0.5rem;
      text-decoration: underline var(--border-thin);
    }
    [aria-current="page"] {
      text-underline-offset: 0.5rem;
      text-decoration: underline var(--border-thin);
    }
  }
  @media (max-width: 60rem) {
    ul {
      li {
        // compensate for all nav li padding
        padding-inline-start: 0;
        a {
          padding-inline-start: calc(var(--space-m) + 0.2em);
        }
        a:is(:hover, :focus) {
          display: block;
          text-underline-offset: 0.5rem;
          text-decoration: underline var(--border-thin);
        }
        input {
          margin-inline-start: var(--space-m);
          margin-block-end: var(--space-m);
        }
      }
      [aria-current="page"] {
        display: block;
        padding-inline-start: calc(var(--space-m) - var(--border-thin) + 0.2em);
        border-inline-start: solid var(--border-thin);
        color: var(--color-dark);
        background-color: var(--color-grey-light);
        text-decoration: none;
      }
    }
  }
}
